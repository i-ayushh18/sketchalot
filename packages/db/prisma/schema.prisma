// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

// // Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// // Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }
// model User{
//   id       String @id @default(uuid())
//   email    String @unique
//   password String
//   name     String
//   photo    String?
//   rooms    Room[]
//   chats    Chat[]

// }

// model Room{
//   id           Int      @id @default(autoincrement())
//   slug         String   @unique
//   createdAt    DateTime @default(now())
//   adminId      String
//   admin        User    @relation(fields: [adminId] ,references: [id])
//   chats        Chat[]        

// }
// // model Chat {
// //   id        Int     @id @default(autoincrement())
// //   message   String
// //   userId    String
// //   roomSlug  String?  // Make optional for now
// //   user      User    @relation(fields: [userId], references: [id])
// //   room      Room?   @relation(fields: [roomSlug], references: [slug])
// // }

// model Chat {
//   id        Int    @id @default(autoincrement())
//   message   String
//   userId    String
//   roomId    Int?   // roomId is optional
//   roomSlug  String? // This is the new field you're adding
//   room      Room?  @relation(fields: [roomId], references: [id]) // Make this relation optional
//   user      User    @relation(fields: [userId], references: [id])
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(uuid())
  email         String     @unique
  password      String
  name          String
  photo         String?
  rooms         Room[]
  chats         Chat[]
}

model Room {
  id          Int       @id @default(autoincrement())
  slug        String    @unique
  createdAt   DateTime  @default(now())
  adminId     String
  admin       User      @relation(fields: [adminId], references: [id])
  chats       Chat[]

  Shape Shape[]
}

model Chat {
  id        Int       @id  @default(autoincrement())
  roomId    Int
  message   String
  userId    String
  room      Room      @relation(fields: [roomId], references: [id])
  user      User      @relation(fields: [userId], references: [id])
}
model Shape {
  id        Int     @id @default(autoincrement())
  type      String
  x         Int
  y         Int
  width     Int?
  height    Int?
  radius    Int?
  centerX   Int?
  centerY   Int?
  startX    Int?
  startY    Int?
  endX      Int?
  endY      Int?
  room      Room    @relation(fields: [roomId], references: [id])
  roomId    Int
}
